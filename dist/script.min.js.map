{"version":3,"sources":["script.js"],"names":["document","addEventListener","teamData","teamId","URLSearchParams","window","location","search","get","regeneratorRuntime","async","_context3","prev","next","awrap","fetchTeamData","sent","populateTeamStats","stop","getElementById","textContent","response","_context","fetch","concat","getTeamIdFromUrl","ok","Error","status","json","abrupt","t0","statsTableBody","_i","_Object$entries","_Object$entries$_i","statistic","value","row","statisticCell","valueCell","rosterList","achievementList","_context2","teamName","league","coach","logoUrl","src","alt","querySelector","innerHTML","Object","entries","statistics","length","_slicedToArray","createElement","appendChild","console","roster","forEach","player","listItem","achievements","achievement"],"mappings":"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","file":"script.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n\r\n    // Function to extract team ID from the URL\r\n    function getTeamIdFromUrl() {\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        return urlParams.get('teamId');\r\n    }\r\n\r\n    const teamId = getTeamIdFromUrl();\r\n\r\n    if (!teamId) {\r\n        document.getElementById('team-name').textContent = 'Error: No team ID provided.';\r\n        return;\r\n    }\r\n\r\n    async function fetchTeamData(teamId) {\r\n        try {\r\n            const response = await fetch(`/api/teams/${teamId}`);  // Replace with your actual API endpoint\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            const teamData = await response.json();\r\n            return teamData;\r\n        } catch (error) {\r\n            console.error('Error fetching team data:', error);\r\n            document.getElementById('team-name').textContent = 'Error: Could not load team data.';\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async function populateTeamStats(teamData) {\r\n        if (!teamData) return;\r\n\r\n        document.getElementById('team-name').textContent = teamData.teamName;\r\n        document.getElementById('team-league').textContent = `League: ${teamData.league}`;\r\n        document.getElementById('team-coach').textContent = `Coach: ${teamData.coach}`;\r\n\r\n        // Optional: Set team logo if you have a URL\r\n        if (teamData.logoUrl) {\r\n            document.getElementById('team-logo').src = teamData.logoUrl;\r\n            document.getElementById('team-logo').alt = `${teamData.teamName} Logo`;\r\n        }\r\n\r\n        // Populate statistics table\r\n        const statsTableBody = document.getElementById('stats-table').querySelector('tbody');\r\n        statsTableBody.innerHTML = ''; // Clear existing rows\r\n\r\n        for (const [statistic, value] of Object.entries(teamData.statistics)) {\r\n            const row = document.createElement('tr');\r\n            const statisticCell = document.createElement('td');\r\n            statisticCell.textContent = statistic;\r\n            const valueCell = document.createElement('td');\r\n            valueCell.textContent = value;\r\n            row.appendChild(statisticCell);\r\n            row.appendChild(valueCell);\r\n            statsTableBody.appendChild(row);\r\n        }\r\n\r\n        // Populate roster list\r\n        const rosterList = document.getElementById('roster-list');\r\n        rosterList.innerHTML = ''; // Clear existing list items\r\n        teamData.roster.forEach(player => {\r\n            const listItem = document.createElement('li');\r\n            listItem.textContent = player;\r\n            rosterList.appendChild(listItem);\r\n        });\r\n\r\n         // Populate achievements list\r\n        const achievementList = document.getElementById('achievement-list');\r\n        achievementList.innerHTML = ''; // Clear existing list items\r\n        teamData.achievements.forEach(achievement => {\r\n            const listItem = document.createElement('li');\r\n            listItem.textContent = achievement;\r\n            achievementList.appendChild(listItem);\r\n        });\r\n    }\r\n\r\n    // Main execution flow\r\n    (async () => {\r\n        const teamData = await fetchTeamData(teamId);\r\n        await populateTeamStats(teamData);\r\n    })();\r\n\r\n});\r\n\r\n\r\n\r\n"]}